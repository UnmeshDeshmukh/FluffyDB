// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor.proto

package raft.proto;

public final class Monitor {
  private Monitor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClusterMonitorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ClusterMonitor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 cluster_id = 1;</code>
     */
    boolean hasClusterId();
    /**
     * <code>required int64 cluster_id = 1;</code>
     */
    long getClusterId();

    /**
     * <code>required int32 num_nodes = 2;</code>
     */
    boolean hasNumNodes();
    /**
     * <code>required int32 num_nodes = 2;</code>
     */
    int getNumNodes();

    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    java.util.List<java.lang.Integer> getProcessIdList();
    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    int getProcessIdCount();
    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    int getProcessId(int index);

    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    java.util.List<java.lang.Integer> getEnqueuedList();
    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    int getEnqueuedCount();
    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    int getEnqueued(int index);

    /**
     * <code>repeated int32 processed = 5;</code>
     */
    java.util.List<java.lang.Integer> getProcessedList();
    /**
     * <code>repeated int32 processed = 5;</code>
     */
    int getProcessedCount();
    /**
     * <code>repeated int32 processed = 5;</code>
     */
    int getProcessed(int index);

    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    java.util.List<java.lang.Integer> getStolenList();
    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    int getStolenCount();
    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    int getStolen(int index);

    /**
     * <code>required int64 tick = 7;</code>
     */
    boolean hasTick();
    /**
     * <code>required int64 tick = 7;</code>
     */
    long getTick();
  }
  /**
   * Protobuf type {@code ClusterMonitor}
   *
   * <pre>
   **
   * the accompanying information for all messages. Provides origination,
   * security, authentication, and tracking information
   * </pre>
   */
  public static final class ClusterMonitor extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ClusterMonitor)
      ClusterMonitorOrBuilder {
    // Use ClusterMonitor.newBuilder() to construct.
    private ClusterMonitor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterMonitor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterMonitor defaultInstance;
    public static ClusterMonitor getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterMonitor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterMonitor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              clusterId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              numNodes_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                processId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              processId_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                processId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                processId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                enqueued_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              enqueued_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                enqueued_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                enqueued_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                processed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              processed_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                processed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                processed_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stolen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              stolen_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                stolen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                stolen_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000004;
              tick_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          processId_ = java.util.Collections.unmodifiableList(processId_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          enqueued_ = java.util.Collections.unmodifiableList(enqueued_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          processed_ = java.util.Collections.unmodifiableList(processed_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          stolen_ = java.util.Collections.unmodifiableList(stolen_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return raft.proto.Monitor.internal_static_ClusterMonitor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return raft.proto.Monitor.internal_static_ClusterMonitor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              raft.proto.Monitor.ClusterMonitor.class, raft.proto.Monitor.ClusterMonitor.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterMonitor> PARSER =
        new com.google.protobuf.AbstractParser<ClusterMonitor>() {
      public ClusterMonitor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterMonitor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterMonitor> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CLUSTER_ID_FIELD_NUMBER = 1;
    private long clusterId_;
    /**
     * <code>required int64 cluster_id = 1;</code>
     */
    public boolean hasClusterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 cluster_id = 1;</code>
     */
    public long getClusterId() {
      return clusterId_;
    }

    public static final int NUM_NODES_FIELD_NUMBER = 2;
    private int numNodes_;
    /**
     * <code>required int32 num_nodes = 2;</code>
     */
    public boolean hasNumNodes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 num_nodes = 2;</code>
     */
    public int getNumNodes() {
      return numNodes_;
    }

    public static final int PROCESS_ID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> processId_;
    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getProcessIdList() {
      return processId_;
    }
    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    public int getProcessIdCount() {
      return processId_.size();
    }
    /**
     * <code>repeated int32 process_id = 3;</code>
     */
    public int getProcessId(int index) {
      return processId_.get(index);
    }

    public static final int ENQUEUED_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> enqueued_;
    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getEnqueuedList() {
      return enqueued_;
    }
    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    public int getEnqueuedCount() {
      return enqueued_.size();
    }
    /**
     * <code>repeated int32 enqueued = 4;</code>
     */
    public int getEnqueued(int index) {
      return enqueued_.get(index);
    }

    public static final int PROCESSED_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> processed_;
    /**
     * <code>repeated int32 processed = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getProcessedList() {
      return processed_;
    }
    /**
     * <code>repeated int32 processed = 5;</code>
     */
    public int getProcessedCount() {
      return processed_.size();
    }
    /**
     * <code>repeated int32 processed = 5;</code>
     */
    public int getProcessed(int index) {
      return processed_.get(index);
    }

    public static final int STOLEN_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> stolen_;
    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getStolenList() {
      return stolen_;
    }
    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    public int getStolenCount() {
      return stolen_.size();
    }
    /**
     * <code>repeated int32 stolen = 6;</code>
     */
    public int getStolen(int index) {
      return stolen_.get(index);
    }

    public static final int TICK_FIELD_NUMBER = 7;
    private long tick_;
    /**
     * <code>required int64 tick = 7;</code>
     */
    public boolean hasTick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 tick = 7;</code>
     */
    public long getTick() {
      return tick_;
    }

    private void initFields() {
      clusterId_ = 0L;
      numNodes_ = 0;
      processId_ = java.util.Collections.emptyList();
      enqueued_ = java.util.Collections.emptyList();
      processed_ = java.util.Collections.emptyList();
      stolen_ = java.util.Collections.emptyList();
      tick_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClusterId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumNodes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTick()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, clusterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, numNodes_);
      }
      for (int i = 0; i < processId_.size(); i++) {
        output.writeInt32(3, processId_.get(i));
      }
      for (int i = 0; i < enqueued_.size(); i++) {
        output.writeInt32(4, enqueued_.get(i));
      }
      for (int i = 0; i < processed_.size(); i++) {
        output.writeInt32(5, processed_.get(i));
      }
      for (int i = 0; i < stolen_.size(); i++) {
        output.writeInt32(6, stolen_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(7, tick_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, clusterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numNodes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < processId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(processId_.get(i));
        }
        size += dataSize;
        size += 1 * getProcessIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enqueued_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(enqueued_.get(i));
        }
        size += dataSize;
        size += 1 * getEnqueuedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < processed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(processed_.get(i));
        }
        size += dataSize;
        size += 1 * getProcessedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stolen_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(stolen_.get(i));
        }
        size += dataSize;
        size += 1 * getStolenList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, tick_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static raft.proto.Monitor.ClusterMonitor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static raft.proto.Monitor.ClusterMonitor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static raft.proto.Monitor.ClusterMonitor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(raft.proto.Monitor.ClusterMonitor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ClusterMonitor}
     *
     * <pre>
     **
     * the accompanying information for all messages. Provides origination,
     * security, authentication, and tracking information
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ClusterMonitor)
        raft.proto.Monitor.ClusterMonitorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return raft.proto.Monitor.internal_static_ClusterMonitor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return raft.proto.Monitor.internal_static_ClusterMonitor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                raft.proto.Monitor.ClusterMonitor.class, raft.proto.Monitor.ClusterMonitor.Builder.class);
      }

      // Construct using raft.proto.Monitor.ClusterMonitor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clusterId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        numNodes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        processId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        enqueued_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        processed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        stolen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        tick_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return raft.proto.Monitor.internal_static_ClusterMonitor_descriptor;
      }

      public raft.proto.Monitor.ClusterMonitor getDefaultInstanceForType() {
        return raft.proto.Monitor.ClusterMonitor.getDefaultInstance();
      }

      public raft.proto.Monitor.ClusterMonitor build() {
        raft.proto.Monitor.ClusterMonitor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public raft.proto.Monitor.ClusterMonitor buildPartial() {
        raft.proto.Monitor.ClusterMonitor result = new raft.proto.Monitor.ClusterMonitor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clusterId_ = clusterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.numNodes_ = numNodes_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          processId_ = java.util.Collections.unmodifiableList(processId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.processId_ = processId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          enqueued_ = java.util.Collections.unmodifiableList(enqueued_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.enqueued_ = enqueued_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          processed_ = java.util.Collections.unmodifiableList(processed_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.processed_ = processed_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          stolen_ = java.util.Collections.unmodifiableList(stolen_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.stolen_ = stolen_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tick_ = tick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof raft.proto.Monitor.ClusterMonitor) {
          return mergeFrom((raft.proto.Monitor.ClusterMonitor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(raft.proto.Monitor.ClusterMonitor other) {
        if (other == raft.proto.Monitor.ClusterMonitor.getDefaultInstance()) return this;
        if (other.hasClusterId()) {
          setClusterId(other.getClusterId());
        }
        if (other.hasNumNodes()) {
          setNumNodes(other.getNumNodes());
        }
        if (!other.processId_.isEmpty()) {
          if (processId_.isEmpty()) {
            processId_ = other.processId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureProcessIdIsMutable();
            processId_.addAll(other.processId_);
          }
          onChanged();
        }
        if (!other.enqueued_.isEmpty()) {
          if (enqueued_.isEmpty()) {
            enqueued_ = other.enqueued_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEnqueuedIsMutable();
            enqueued_.addAll(other.enqueued_);
          }
          onChanged();
        }
        if (!other.processed_.isEmpty()) {
          if (processed_.isEmpty()) {
            processed_ = other.processed_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureProcessedIsMutable();
            processed_.addAll(other.processed_);
          }
          onChanged();
        }
        if (!other.stolen_.isEmpty()) {
          if (stolen_.isEmpty()) {
            stolen_ = other.stolen_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureStolenIsMutable();
            stolen_.addAll(other.stolen_);
          }
          onChanged();
        }
        if (other.hasTick()) {
          setTick(other.getTick());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClusterId()) {
          
          return false;
        }
        if (!hasNumNodes()) {
          
          return false;
        }
        if (!hasTick()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        raft.proto.Monitor.ClusterMonitor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (raft.proto.Monitor.ClusterMonitor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long clusterId_ ;
      /**
       * <code>required int64 cluster_id = 1;</code>
       */
      public boolean hasClusterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 cluster_id = 1;</code>
       */
      public long getClusterId() {
        return clusterId_;
      }
      /**
       * <code>required int64 cluster_id = 1;</code>
       */
      public Builder setClusterId(long value) {
        bitField0_ |= 0x00000001;
        clusterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 cluster_id = 1;</code>
       */
      public Builder clearClusterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clusterId_ = 0L;
        onChanged();
        return this;
      }

      private int numNodes_ ;
      /**
       * <code>required int32 num_nodes = 2;</code>
       */
      public boolean hasNumNodes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 num_nodes = 2;</code>
       */
      public int getNumNodes() {
        return numNodes_;
      }
      /**
       * <code>required int32 num_nodes = 2;</code>
       */
      public Builder setNumNodes(int value) {
        bitField0_ |= 0x00000002;
        numNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 num_nodes = 2;</code>
       */
      public Builder clearNumNodes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        numNodes_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> processId_ = java.util.Collections.emptyList();
      private void ensureProcessIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          processId_ = new java.util.ArrayList<java.lang.Integer>(processId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getProcessIdList() {
        return java.util.Collections.unmodifiableList(processId_);
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public int getProcessIdCount() {
        return processId_.size();
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public int getProcessId(int index) {
        return processId_.get(index);
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public Builder setProcessId(
          int index, int value) {
        ensureProcessIdIsMutable();
        processId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public Builder addProcessId(int value) {
        ensureProcessIdIsMutable();
        processId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public Builder addAllProcessId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureProcessIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, processId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 process_id = 3;</code>
       */
      public Builder clearProcessId() {
        processId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> enqueued_ = java.util.Collections.emptyList();
      private void ensureEnqueuedIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          enqueued_ = new java.util.ArrayList<java.lang.Integer>(enqueued_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getEnqueuedList() {
        return java.util.Collections.unmodifiableList(enqueued_);
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public int getEnqueuedCount() {
        return enqueued_.size();
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public int getEnqueued(int index) {
        return enqueued_.get(index);
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public Builder setEnqueued(
          int index, int value) {
        ensureEnqueuedIsMutable();
        enqueued_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public Builder addEnqueued(int value) {
        ensureEnqueuedIsMutable();
        enqueued_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public Builder addAllEnqueued(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEnqueuedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, enqueued_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enqueued = 4;</code>
       */
      public Builder clearEnqueued() {
        enqueued_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> processed_ = java.util.Collections.emptyList();
      private void ensureProcessedIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          processed_ = new java.util.ArrayList<java.lang.Integer>(processed_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getProcessedList() {
        return java.util.Collections.unmodifiableList(processed_);
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public int getProcessedCount() {
        return processed_.size();
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public int getProcessed(int index) {
        return processed_.get(index);
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public Builder setProcessed(
          int index, int value) {
        ensureProcessedIsMutable();
        processed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public Builder addProcessed(int value) {
        ensureProcessedIsMutable();
        processed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public Builder addAllProcessed(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureProcessedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, processed_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 processed = 5;</code>
       */
      public Builder clearProcessed() {
        processed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> stolen_ = java.util.Collections.emptyList();
      private void ensureStolenIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          stolen_ = new java.util.ArrayList<java.lang.Integer>(stolen_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getStolenList() {
        return java.util.Collections.unmodifiableList(stolen_);
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public int getStolenCount() {
        return stolen_.size();
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public int getStolen(int index) {
        return stolen_.get(index);
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public Builder setStolen(
          int index, int value) {
        ensureStolenIsMutable();
        stolen_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public Builder addStolen(int value) {
        ensureStolenIsMutable();
        stolen_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public Builder addAllStolen(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStolenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stolen_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stolen = 6;</code>
       */
      public Builder clearStolen() {
        stolen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private long tick_ ;
      /**
       * <code>required int64 tick = 7;</code>
       */
      public boolean hasTick() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 tick = 7;</code>
       */
      public long getTick() {
        return tick_;
      }
      /**
       * <code>required int64 tick = 7;</code>
       */
      public Builder setTick(long value) {
        bitField0_ |= 0x00000040;
        tick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 tick = 7;</code>
       */
      public Builder clearTick() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tick_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ClusterMonitor)
    }

    static {
      defaultInstance = new ClusterMonitor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ClusterMonitor)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClusterMonitor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ClusterMonitor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmonitor.proto\"\216\001\n\016ClusterMonitor\022\022\n\ncl" +
      "uster_id\030\001 \002(\003\022\021\n\tnum_nodes\030\002 \002(\005\022\022\n\npro" +
      "cess_id\030\003 \003(\005\022\020\n\010enqueued\030\004 \003(\005\022\021\n\tproce" +
      "ssed\030\005 \003(\005\022\016\n\006stolen\030\006 \003(\005\022\014\n\004tick\030\007 \002(\003" +
      "B\016\n\nraft.protoH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ClusterMonitor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ClusterMonitor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ClusterMonitor_descriptor,
        new java.lang.String[] { "ClusterId", "NumNodes", "ProcessId", "Enqueued", "Processed", "Stolen", "Tick", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
